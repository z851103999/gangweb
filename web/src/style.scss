//reset
* {
    box-sizing: border-box;
    outline: none; //禁止高亮
  }
  
  html {
    font-size: 13px;
  }
  
  boby {
    margin: 0;
    padding: 0;
    font-family: Arial, Helvetica, sans-serif;
    list-style: none;
    line-height: 1.2em;
    background: #f1f1f1;
  }
  
  a {
    color: #999;
  }
  
  //colors
  $colors: ("primary": #db9e3f,
    "white":#fff,
    "light":#f9f9f9,
    "black":#000,
    "grey":#999,
    "dark":#222,
    "dark-1":#343440);
  
  @each $colorKey,
  $color in $colors {
    .text-#{$colorKey} {
      color: $color;
    }
  
    .bg-#{$colorKey} {
      background: $color;
    }
  }
  
  //colorKey遍历里面键值，$color里面的颜色值
  
  //文字对齐
  @each $var in (left, center, right) {
    .text-#{$var} {
      text-align: $var;
    }
  }
  
  //字体
  $base-font-size:1rem;
  $font-sizes:(xs:0.7692, //10px
    sm:12, //12px
    md:1, //13px
    lg:1.0769, //14px
    xl:1.2308 //16px
  );
  
  @each $sizeKey,
  $size in $font-sizes {
    .fs-#{$sizeKey} {
      font-size: $size * $base-font-size
    }
  }
  
  //flex
  .d-flex {
    display: flex;
  }
  
  .flex-colum {
    flex-direction: column;
  }
  
  $flex-jc:(start:flex-start,
    end:flex-end,
    center:center,
    between:space-between,
    around:space-around);
  
  @each $key,
  $value in $flex-jc {
    .jc-#{$key} {
      justify-content: $value;
    }
  }
  
  $flex-ai:(start:flex-start,
    end:flex-end,
    center:center,
    stretch:stretch);
  
  @each $key,
  $value in $flex-ai {
    .jc-#{$key} {
      align-items: $value;
    }
  }
  
  .flex-1 {
    flex: 1;
  }
  
  .flex-grow-1 {
    flex-grow: 1;
  }
  
  //间距
  $spacing-types:(m:margin,p:padding);
  $spacing-directions:(t:top, r:right, b:bottom, l:left);
  $spacing-base-size:1rem;
  $spacing-sizes:(0:0,1:0.25,2:0.5,3:1,4:1.5,5:3);
  
  // m-0, mx-0
  @each $typeKey, $type in $spacing-types {
    // .m-1
    @each $sizeKey, $size in $spacing-sizes {
      .#{$typeKey}-#{$sizeKey} {
        #{$type}: $size * $spacing-base-size;
      }
    }
    // .mx-1 , .my-1
    @each $sizeKey, $size in $spacing-sizes {
      .#{$typeKey}x-#{$sizeKey} {
        #{$type}-left: $size * $spacing-base-size;
        #{$type}-right: $size * $spacing-base-size;
      }
      .#{$typeKey}y-#{$sizeKey} {
        #{$type}-top: $size * $spacing-base-size;
        #{$type}-bottom: $size * $spacing-base-size;
      }
    }
    // .mt-1
    @each $directionKey, $direction in $spacing-directions {
      @each $sizeKey, $size in $spacing-sizes {
        .#{$typeKey}#{$directionKey}-#{$sizeKey} {
          #{$type}-#{$direction}: $size * $spacing-base-size;
        }
      }
    }
  }